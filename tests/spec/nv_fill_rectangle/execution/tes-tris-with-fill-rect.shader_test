# Tests that we can output a triangle from the TES and have it rasterized as a
# rectangle with GL_NV_fill_rectangle
[require]
GLSL >= 1.50
GL_NV_fill_rectangle
GL_ARB_tessellation_shader

[vertex shader passthrough]

[tessellation evaluation shader]
#extension GL_ARB_tessellation_shader: require
layout(triangles) in;

void main()
{
	gl_Position = gl_in[0].gl_Position * gl_TessCoord[0]
	            + gl_in[1].gl_Position * gl_TessCoord[1]
	            + gl_in[2].gl_Position * gl_TessCoord[2];
}

[fragment shader]
void main()
{
	gl_FragColor = vec4(0, 1, 0, 1);
}

[vertex data]
piglit_vertex/float/3
 0.0  0.5  0.0
 0.5 -0.5  0.0
-0.5 -0.5  0.0

[test]
clear color 0.2 0.2 0.2 0.2
clear

polygon mode GL_FRONT_AND_BACK GL_FILL_RECTANGLE_NV
draw arrays GL_PATCHES 0 3

relative probe rect rgb (0.26, 0.26, 0.48, 0.48) (0.0, 1.0, 0.0, 1.0)
probe rgb 0 0 0.2 0.2 0.2
